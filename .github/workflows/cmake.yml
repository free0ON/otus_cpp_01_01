name: 'C++ CI'

env:
  PRJ_NAME: helloworld
  PRJ_VERSION: 0.0.${{ github.run_number }}
  EMAIL_CONTACT: dmitrii.lozovoi@yandex.ru
  BOOST_TEST: OFF
  GOOGLE_TEST: OFF
  CATCH2_TEST: OFF
  
on:
  push:
    branches:
      - master
      - main
      - feature/github_actions

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
        if: env.BOOST_TEST == 'ON'
      - run: sudo apt-get update && sudo apt-get install libgtest-dev -y
        if: env.GOOGLE_TEST == 'ON'
      - run: |
          git clone https://github.com/catchorg/Catch2
          cd Catch2
          cmake -Bbuild -H. -DBUILD_TESTING=OFF
          sudo cmake --build build/ --target install
          #sudo apt-get update -y
          #git clone https://github.com/Microsoft/vcpkg.git
          #./vcpkg/bootstrap-vcpkg.sh
          #./vcpkg/vcpkg install catch2
        if: env.CATCH2_TEST == 'ON'
      - run: cmake . -DPRJ_NAME= ${{ PRJ_NAME }} -DPRJ_VERSION= ${{ PRJ_VERSION }} -DEMAIL_CONTACT=${{ env.EMAIL_CONTACT }} -DBOOST_TEST=${{ env.BOOST_TEST }} -DGOOGLE_TEST=${{ env.GOOGLE_TEST }} -DCATCH2_TEST=${{ env.CATCH2_TEST }}
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PROJECT_NAME }}-${{ env.MAJOR_VERSION}}.${{ env.MINOR_VERSION}}.${{ env.PATCH_VERSION}}-Linux.deb
          asset_name: ${{ env.PROJECT_NAME }}-${{ env.MAJOR_VERSION}}.${{ env.MINOR_VERSION}}.${{ env.PATCH_VERSION }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
