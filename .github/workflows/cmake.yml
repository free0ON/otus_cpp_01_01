name: 'C++ CI'

env:
  PRJ_NAME: "helloworld" # name without spaces
  PRJ_VERSION_MAJOR: 0
  PRJ_VERSION_MINOR: 0
  PRJ_VERSION_PATCH: ${{ github.run_number }}
  PRJ_DESCRIPTION: "Description_of_test_program" # description without spaces
  PRJ_HOMEPAGE_URL: "${{ github.server_url }}//${{ github.repository }}"
  PRJ_CMAKE_MIN_VERSION: 3.2
  EMAIL_CONTACT: dmitrii.lozovoi@yandex.ru
  BOOST_TEST: OFF
  GOOGLE_TEST: ON
  CATCH2_TEST: OFF
  
on:
  push:
    branches:
      - master
      - main
      - feature/github_actions

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
        if: env.BOOST_TEST == 'ON'
      - run: |
          sudo apt-get update && sudo apt-get install && sudo apt-get install libgtest-dev -y
        if: env.GOOGLE_TEST == 'ON'
      - run: |
          git clone https://github.com/catchorg/Catch2
          cd Catch2
          cmake -Bbuild -H. -DBUILD_TESTING=OFF
          sudo cmake --build build --target install
        if: env.CATCH2_TEST == 'ON'
      - run: |
          cmake . -DPRJ_NAME=${{ env.PRJ_NAME }} \
          -DPRJ_VERSION_MAJOR=${{ env.PRJ_VERSION_MAJOR }} \
          -DPRJ_VERSION_MINOR=${{ env.PRJ_VERSION_MINOR }} \
          -DPRJ_VERSION_PATCH=${{ env.PRJ_VERSION_PATCH }} \
          -DPRJ_DESCRIPTION=${{ env.PRJ_DESCRIPTION }} \
          -DPRJ_HOMEPAGE_URL=${{ env.PRJ_HOMEPAGE_URL }} \
          -DPRJ_CMAKE_MIN_VERSION=${{ env.PRJ_CMAKE_MIN_VERSION }} \
          -DEMAIL_CONTACT=${{ env.EMAIL_CONTACT }} \
          -DBOOST_TEST=${{ env.BOOST_TEST }} \
          -DGOOGLE_TEST=${{ env.GOOGLE_TEST }} \
          -DCATCH2_TEST=${{ env.CATCH2_TEST }} \
          -DGTEST_HAS_PTHREAD=0
      - run: cmake --build . 
      - run: cmake --build . --target test 
        if: (env.BOOST_TEST == 'ON') || (env.GOOGLE_TEST == 'ON') || (env.CATCH2_TEST == 'ON')  
      - run: cmake --build . --target package 
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PRJ_NAME }}-${{ env.PRJ_VERSION_MAJOR}}.${{ env.PRJ_VERSION_MINOR}}.${{ env.PRJ_VERSION_PATCH}}-Linux.deb
          asset_name: ${{ env.PRJ_NAME }}-${{ env.PRJ_VERSION_MAJOR}}.${{ env.PRJ_VERSION_MINOR}}.${{ env.PRJ_VERSION_PATCH }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package